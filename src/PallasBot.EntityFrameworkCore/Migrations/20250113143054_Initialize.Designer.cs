// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PallasBot.EntityFrameworkCore;

#nullable disable

namespace PallasBot.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(PallasBotDbContext))]
    [Migration("20250113143054_Initialize")]
    partial class Initialize
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PallasBot.Domain.Entities.DiscordUserRole", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("guild_id");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("user_id");

                    b.PrimitiveCollection<decimal[]>("RoleIds")
                        .IsRequired()
                        .HasColumnType("numeric(20,0)[]")
                        .HasColumnName("role_ids");

                    b.HasKey("GuildId", "UserId");

                    b.ToTable("discord_user_role");
                });

            modelBuilder.Entity("PallasBot.Domain.Entities.DynamicConfiguration", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("guild_id");

                    b.Property<string>("Key")
                        .HasColumnType("text")
                        .HasColumnName("key");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("GuildId", "Key");

                    b.ToTable("dynamic_configuration");
                });

            modelBuilder.Entity("PallasBot.Domain.Entities.GitHubContributor", b =>
                {
                    b.Property<string>("GitHubLogin")
                        .HasColumnType("text")
                        .HasColumnName("github_login");

                    b.Property<bool>("IsContributor")
                        .HasColumnType("boolean")
                        .HasColumnName("is_contributor");

                    b.Property<bool>("IsTeamMember")
                        .HasColumnType("boolean")
                        .HasColumnName("is_team_member");

                    b.HasKey("GitHubLogin");

                    b.ToTable("github_contributors");
                });

            modelBuilder.Entity("PallasBot.Domain.Entities.GitHubUserBinding", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("guild_id");

                    b.Property<decimal>("DiscordUserId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("discord_user_id");

                    b.Property<string>("GitHubLogin")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("github_login");

                    b.Property<decimal>("GitHubUserId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("github_user_id");

                    b.HasKey("GuildId", "DiscordUserId");

                    b.ToTable("github_user_binding");
                });
#pragma warning restore 612, 618
        }
    }
}
